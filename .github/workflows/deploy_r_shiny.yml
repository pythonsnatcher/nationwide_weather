name: Deploy Shiny App

on:
  schedule:
    - cron: '0 0 */14 * *'  # Run every 14 days at midnight
  workflow_dispatch:         # Allows manual triggering
  push:                     # Optional: add this if you want it to run on pushes
    branches: [ main ]      # Specify which branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          libcurl4-openssl-dev \
          libssl-dev \
          libxml2-dev \
          libpng-dev \
          libudunits2-dev \
          libgdal-dev \
          pandoc

    - name: Install R dependencies
      run: |
        Rscript -e 'install.packages(c(
          "remotes",
          "rsconnect",
          "DBI",
          "dplyr",
          "leaflet",
          "lubridate",
          "plotly",
          "RPostgres",
          "RSQLite",
          "shinyjs"
        ), repos="https://cran.rstudio.com")'

    - name: Wait for existing deployments
      run: |
        sleep 30  # Wait 30 seconds for any existing deployments to complete
        
    - name: Deploy to shinyapps.io
      env:
        SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
        SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}
      run: |
        max_retries=3
        retry_count=0
        
        # Debug: Check if scripts directory exists
        echo "Checking for scripts directory..."
        if [ -d "scripts" ]; then
          echo "✓ scripts directory found"
          ls -la scripts/
        else
          echo "✗ scripts directory not found"
          echo "Current directory contents:"
          ls -la
        fi
        
        # Debug: Check if app.R exists
        echo "Checking for app.R..."
        if [ -f "scripts/app.R" ]; then
          echo "✓ app.R found"
        else
          echo "✗ app.R not found"
        fi
        
        while [ $retry_count -lt $max_retries ]; do
          echo "Attempting deployment (attempt $((retry_count+1)) of $max_retries)..."
          if Rscript -e '
            options(rsconnect.log.level="DEBUG");
            cat("Setting account info...\n");
            rsconnect::setAccountInfo(name="tuco-bear", token=Sys.getenv("SHINYAPPS_TOKEN"), secret=Sys.getenv("SHINYAPPS_SECRET")); 
            cat("Starting deployment...\n");
            rsconnect::deployApp(
              appDir = "scripts", 
              appName = "YOUR_APP_NAME", 
              appFiles = "app.R",
              logLevel="DEBUG"
            )'; then
            echo "✓ Deployment successful"
            exit 0
          else
            retry_count=$((retry_count+1))
            if [ $retry_count -lt $max_retries ]; then
              wait_time=$((30 * retry_count))
              echo "✗ Deployment failed, waiting $wait_time seconds before retry $retry_count of $max_retries"
              sleep $wait_time
            else
              echo "✗ Deployment failed after $max_retries attempts"
              exit 1
            fi
          fi
        done
